ggplot(dat) + geom_bar(aes(x = total_salary, y = team)) + coord_flip()
knitr::opts_chunk$set(echo = TRUE)
library('readr')
library('dplyr')
library('ggplot2')
#a)
team_salaries <- arrange(summarise(group_by(dat, team), total_salary = sum(salary) / 1000000, mean_salary = mean(salary) / 1000000, median_salary = median(salary) / 1000000), desc(total_salary))
team_salaries
#b)
as.data.frame(team_salaries)
#c)
ggplot(dat) + geom_bar(aes(x = total_salary, y = team)) + coord_flip()
#a)
team_salaries <- arrange(summarise(group_by(dat, team), total_salary = sum(salary) / 1000000, mean_salary = mean(salary) / 1000000, median_salary = median(salary) / 1000000), desc(total_salary))
team_salaries
#b)
as.data.frame(team_salaries)
#c)
ggplot(team_salaries) + geom_bar(aes(x = total_salary, y = team)) + coord_flip()
#a)
team_salaries <- arrange(summarise(group_by(dat, team), total_salary = sum(salary) / 1000000, mean_salary = mean(salary) / 1000000, median_salary = median(salary) / 1000000), desc(total_salary))
team_salaries
#b)
as.data.frame(team_salaries)
#c)
ggplot(team_salaries) + geom_bar(aes(x = total_salary) + coord_flip()
#a)
team_salaries <- arrange(summarise(group_by(dat, team), total_salary = sum(salary) / 1000000, mean_salary = mean(salary) / 1000000, median_salary = median(salary) / 1000000), desc(total_salary))
team_salaries
#b)
as.data.frame(team_salaries)
#c)
ggplot(team_salaries) + geom_bar(aes(x = total_salary)) + coord_flip()
knitr::opts_chunk$set(echo = TRUE)
library('readr')
library('dplyr')
library('ggplot2')
data_types <- list(col_character(), col_character(), col_character(), col_integer(), col_integer(), col_integer(), col_integer(), col_character(), col_double(), col_integer(), col_integer(), col_integer(), col_integer(), col_integer(), col_integer())
dat <- read_csv('nba2018-players.csv', col_names = TRUE, col_types = data_types)
summary(dat)
str(dat)
#a)
team_salaries <- arrange(summarise(group_by(dat, team), total_salary = sum(salary) / 1000000, mean_salary = mean(salary) / 1000000, median_salary = median(salary) / 1000000), desc(total_salary))
team_salaries
#b)
as.data.frame(team_salaries)
#c)
ggplot(team_salaries) + geom_bar(aes(x = total_salary))
#a)
team_salaries <- arrange(summarise(group_by(dat, team), total_salary = sum(salary) / 1000000, mean_salary = mean(salary) / 1000000, median_salary = median(salary) / 1000000), desc(total_salary))
team_salaries
#b)
as.data.frame(team_salaries)
#c)
ggplot(team_salaries) + geom_bar(aes(x = team, y = total_salary))
#a)
team_salaries <- arrange(summarise(group_by(dat, team), total_salary = sum(salary) / 1000000, mean_salary = mean(salary) / 1000000, median_salary = median(salary) / 1000000), desc(total_salary))
team_salaries
#b)
as.data.frame(team_salaries)
#c)
ggplot(team_salaries) + geom_bar(aes(x = team))
#a)
team_salaries <- arrange(summarise(group_by(dat, team), total_salary = sum(salary) / 1000000, mean_salary = mean(salary) / 1000000, median_salary = median(salary) / 1000000), desc(total_salary))
team_salaries
#b)
as.data.frame(team_salaries)
#c)
ggplot(team_salaries$team) + geom_bar(aes(x = total_salaries))
#a)
team_salaries <- arrange(summarise(group_by(dat, team), total_salary = sum(salary) / 1000000, mean_salary = mean(salary) / 1000000, median_salary = median(salary) / 1000000), desc(total_salary))
team_salaries
#b)
as.data.frame(team_salaries)
#c)
ggplot(team_salaries, aes(x = team, y = total_salaries)) + geom_bar(aes(stat='identity'))
#a)
team_salaries <- arrange(summarise(group_by(dat, team), total_salary = sum(salary) / 1000000, mean_salary = mean(salary) / 1000000, median_salary = median(salary) / 1000000), desc(total_salary))
team_salaries
#b)
as.data.frame(team_salaries)
#c)
ggplot(team_salaries, aes(x = team, y = total_salary)) + geom_bar(aes(stat='identity'))
#a)
team_salaries <- arrange(summarise(group_by(dat, team), total_salary = sum(salary) / 1000000, mean_salary = mean(salary) / 1000000, median_salary = median(salary) / 1000000), desc(total_salary))
team_salaries
#b)
as.data.frame(team_salaries)
#c)
ggplot(data=team_salaries, aes(x = team, y = total_salary)) + geom_bar(aes(stat='identity'))
#a)
team_salaries <- arrange(summarise(group_by(dat, team), total_salary = sum(salary) / 1000000, mean_salary = mean(salary) / 1000000, median_salary = median(salary) / 1000000), desc(total_salary))
team_salaries
#b)
as.data.frame(team_salaries)
#c)
ggplot(data=team_salaries, aes(x = team, y = total_salary))
#a)
team_salaries <- arrange(summarise(group_by(dat, team), total_salary = sum(salary) / 1000000, mean_salary = mean(salary) / 1000000, median_salary = median(salary) / 1000000), desc(total_salary))
team_salaries
#b)
as.data.frame(team_salaries)
#c)
ggplot(data=team_salaries, aes(x = team, y = total_salary)) + geom_bar()
#a)
team_salaries <- arrange(summarise(group_by(dat, team), total_salary = sum(salary) / 1000000, mean_salary = mean(salary) / 1000000, median_salary = median(salary) / 1000000), desc(total_salary))
team_salaries
#b)
as.data.frame(team_salaries)
#c)
ggplot(data=team_salaries, aes(x = team, y = total_salary)) + geom_bar(stat = 'identity')
#a)
team_salaries <- arrange(summarise(group_by(dat, team), total_salary = sum(salary) / 1000000, mean_salary = mean(salary) / 1000000, median_salary = median(salary) / 1000000), desc(total_salary))
team_salaries
#b)
as.data.frame(team_salaries)
#c)
ggplot(data=team_salaries, aes(x = team, y = total_salary)) + geom_bar(stat = 'identity') + coord_flip()
#a)
team_salaries <- arrange(summarise(group_by(dat, team), total_salary = sum(salary) / 1000000, mean_salary = mean(salary) / 1000000, median_salary = median(salary) / 1000000), desc(total_salary))
team_salaries
#b)
as.data.frame(team_salaries)
#c)
ggplot(data=team_salaries, aes(x = team, y = total_salary)) + geom_bar(stat = 'identity') + coord_flip() + xlab('Total Salary (in millions)') + ylab('Team') + ggtitle('NBA Teams Ranked by Total Salary') + geom_vline(x = mean(team_salaries$total_salary))
#a)
team_salaries <- arrange(summarise(group_by(dat, team), total_salary = sum(salary) / 1000000, mean_salary = mean(salary) / 1000000, median_salary = median(salary) / 1000000), desc(total_salary))
team_salaries
#b)
as.data.frame(team_salaries)
#c)
ggplot(data=team_salaries, aes(x = team, y = total_salary)) + geom_bar(stat = 'identity') + coord_flip() + xlab('Total Salary (in millions)') + ylab('Team') + ggtitle('NBA Teams Ranked by Total Salary') + geom_vline(x = (mean(team_salaries$total_salary)))
#a)
team_salaries <- arrange(summarise(group_by(dat, team), total_salary = sum(salary) / 1000000, mean_salary = mean(salary) / 1000000, median_salary = median(salary) / 1000000), desc(total_salary))
team_salaries
#b)
as.data.frame(team_salaries)
#c)
ggplot(data=team_salaries, aes(x = team, y = total_salary)) + geom_bar(stat = 'identity') + coord_flip() + xlab('Total Salary (in millions)') + ylab('Team') + ggtitle('NBA Teams Ranked by Total Salary') + geom_vline(x = (mean(team_salaries$total_salary)))
#a)
team_salaries <- arrange(summarise(group_by(dat, team), total_salary = sum(salary) / 1000000, mean_salary = mean(salary) / 1000000, median_salary = median(salary) / 1000000), desc(total_salary))
team_salaries
#b)
as.data.frame(team_salaries)
#c)
ggplot(data=team_salaries, aes(x = team, y = total_salary)) + geom_bar(stat = 'identity') + coord_flip() + xlab('Total Salary (in millions)') + ylab('Team') + ggtitle('NBA Teams Ranked by Total Salary') + geom_vline(xintercept = mean(team_salaries$total_salary))
#a)
team_salaries <- arrange(summarise(group_by(dat, team), total_salary = sum(salary) / 1000000, mean_salary = mean(salary) / 1000000, median_salary = median(salary) / 1000000), desc(total_salary))
team_salaries
#b)
as.data.frame(team_salaries)
#c)
ggplot(data=team_salaries, aes(x = team, y = total_salary)) + geom_bar(stat = 'identity') + coord_flip() + ylab('Total Salary (in millions)') + xlab('Team') + ggtitle('NBA Teams Ranked by Total Salary') + geom_vline(xintercept = mean(team_salaries$total_salary))
#a)
team_salaries <- arrange(summarise(group_by(dat, team), total_salary = sum(salary) / 1000000, mean_salary = mean(salary) / 1000000, median_salary = median(salary) / 1000000), desc(total_salary))
team_salaries
#b)
as.data.frame(team_salaries)
#c)
ggplot(data=team_salaries, aes(x = team, y = total_salary)) + geom_bar(stat = 'identity') + coord_flip() + ylab('Total Salary (in millions)') + xlab('Team') + ggtitle('NBA Teams Ranked by Total Salary') + geom_vline(xintercept = mean(team_salaries$total_salary, colour = 'red'))
#a)
team_salaries <- arrange(summarise(group_by(dat, team), total_salary = sum(salary) / 1000000, mean_salary = mean(salary) / 1000000, median_salary = median(salary) / 1000000), desc(total_salary))
team_salaries
#b)
as.data.frame(team_salaries)
#c)
ggplot(data=team_salaries, aes(x = team, y = total_salary)) + geom_bar(stat = 'identity') + coord_flip() + ylab('Total Salary (in millions)') + xlab('Team') + ggtitle('NBA Teams Ranked by Total Salary') + geom_vline(xintercept = mean(team_salaries$total_salary), colour = 'red')
mean(team_salaries$total_salary)
#a)
team_salaries <- arrange(summarise(group_by(dat, team), total_salary = sum(salary) / 1000000, mean_salary = mean(salary) / 1000000, median_salary = median(salary) / 1000000), desc(total_salary))
team_salaries
#b)
as.data.frame(team_salaries)
#c)
ggplot(data=team_salaries, aes(x = team, y = total_salary)) + geom_bar(stat = 'identity') + coord_flip() + ylab('Total Salary (in millions)') + xlab('Team') + ggtitle('NBA Teams Ranked by Total Salary') + geom_vline(yintercept = mean(team_salaries$total_salary), colour = 'red')
#a)
team_salaries <- arrange(summarise(group_by(dat, team), total_salary = sum(salary) / 1000000, mean_salary = mean(salary) / 1000000, median_salary = median(salary) / 1000000), desc(total_salary))
team_salaries
#b)
as.data.frame(team_salaries)
#c)
ggplot(data=team_salaries, aes(x = team, y = total_salary)) + geom_bar(stat = 'identity') +  ylab('Total Salary (in millions)') + xlab('Team') + ggtitle('NBA Teams Ranked by Total Salary') + geom_vline(xintercept = mean(team_salaries$total_salary), colour = 'red')
#a)
team_salaries <- arrange(summarise(group_by(dat, team), total_salary = sum(salary) / 1000000, mean_salary = mean(salary) / 1000000, median_salary = median(salary) / 1000000), desc(total_salary))
team_salaries
#b)
as.data.frame(team_salaries)
#c)
ggplot(data=team_salaries, aes(x = team, y = total_salary)) + geom_bar(stat = 'identity') +  ylab('Total Salary (in millions)') + xlab('Team') + ggtitle('NBA Teams Ranked by Total Salary') + geom_vline(xintercept = mean(team_salaries$total_salary), colour = 'red') + coord_flip()
#a)
team_salaries <- arrange(summarise(group_by(dat, team), total_salary = sum(salary) / 1000000, mean_salary = mean(salary) / 1000000, median_salary = median(salary) / 1000000), desc(total_salary))
team_salaries
#b)
as.data.frame(team_salaries)
#c)
ggplot(data=team_salaries, aes(x = team, y = total_salary)) + geom_bar(stat = 'identity') + coord_flip() + ylab('Total Salary (in millions)') + xlab('Team') + ggtitle('NBA Teams Ranked by Total Salary') + geom_hline(yintercept = mean(team_salaries$total_salary), colour = 'red')
#a)
team_points <- arrange(summarise(group_by(dat, team), total_points = sum(points), mean_points = mean(points), median_points = median(points), desc(total_points)))
team_points
#a)
team_points <- arrange(summarise(group_by(dat, team), total_points = sum(points), mean_points = mean(points), median_points = median(points), desc(total_points)))
team_points
#b)
as.data.frame(team_points)
#c)
ggplot(team_points, aes(team, total_points)) + geom_bar(stat = 'identity') + coord_flip() + ylab('Total Scored Points) + xlab('Team') + ggtitle('NBA Teams Ranked by Total Scored Points') + geom_hline(yintercept = mean(team_points$total_points) + colour = 'red')
#a)
team_points <- arrange(summarise(group_by(dat, team), total_points = sum(points), mean_points = mean(points), median_points = median(points), desc(total_points)))
team_points
#b)
as.data.frame(team_points)
#c)
ggplot(team_points, aes(team, total_points)) + geom_bar(stat = 'identity') + coord_flip() + ylab('Total Scored Points') + xlab('Team') + ggtitle('NBA Teams Ranked by Total Scored Points') + geom_hline(yintercept = mean(team_points$total_points) + colour = 'red')
#a)
team_points <- arrange(summarise(group_by(dat, team), total_points = sum(points), mean_points = mean(points), median_points = median(points), desc(total_points)))
team_points
#b)
as.data.frame(team_points)
#c)
ggplot(team_points, aes(team, total_points)) + geom_bar(stat = 'identity') + coord_flip() + ylab('Total Scored Points') + xlab('Team') + ggtitle('NBA Teams Ranked by Total Scored Points') + geom_hline(yintercept = mean(team_points$total_points), colour = 'red')
pbinom(10, 100, 0.5)
pbinom(10, 100, 0.5) * 2
2 * pbinom(2, 10, 0.5)
2 * pbinom(10, 100, 0.5)
pnorm(60, mean = 50, sd = 5)
pnorm(40, mean = 50, sd = 5)
pnorm(40, mean = 50, sd = 5) * 2
pnorm(39.5, mean = 50, sd = 5) * 2
pnorm(39.5, mean = 50, sd = 5) * 2 * 2
pbinom(10, 100, pnorm(40, 50, 5))
pbinom(10, 100, pnorm(60, 50, 5))
pbinom(10, 100, 0.5
)
2 * pbinom(2, 10, 0.5)
2 * pbinom(10, 100, 0.5)
2 * pbinom(10, 100, 0.5)
2 * pbinom(39, 100, 0.5)
mean(1, 2, 3)
mean(c(1, 2, 3))
mean(c(103.768, 92.295, 100.615, 102.754, 88.602, 61.675, 88.017, 108.579, 73.003, 90.667, 71.210, 73.154, 123.086, 84.023, 82.115, 106.755, 91.052, 76.014, 89.222, 90.479))
sd(c(103.768, 92.295, 100.615, 102.754, 88.602, 61.675, 88.017, 108.579, 73.003, 90.667, 71.210, 73.154, 123.086, 84.023, 82.115, 106.755, 91.052, 76.014, 89.222, 90.479))
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
values_of_p <- seq(0.001, 0.999, by=0.01)
power <- pnorm(39.5, 100 * p, sqrt(100 * p * (1 - p))) + (1 - pnorm(60.5, 100 * p, sqrt(100 * p * (1 - p))))
power_df <- data_frame(power)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(readr)
values_of_p <- seq(0.001, 0.999, by=0.01)
power <- pnorm(39.5, 100 * p, sqrt(100 * p * (1 - p))) + (1 - pnorm(60.5, 100 * p, sqrt(100 * p * (1 - p))))
power_df <- data_frame(power)
values_of_p <- seq(0.001, 0.999, by=0.01)
power <- pnorm(39.5, 100 * p, sqrt(100 * p * (1 - p))) + (1 - pnorm(60.5, 100 * p, sqrt(100 * p * (1 - p))))
power_df <- data.frame(power)
ggplot(power_df) + geom_line(aes(x = p, y = power))
values_of_p <- seq(0.001, 0.999, by=0.01)
power <- pnorm(39.5, 100 * p, sqrt(100 * p * (1 - p))) + (1 - pnorm(60.5, 100 * p, sqrt(100 * p * (1 - p))))
power_df <- data.frame(power)
ggplot(power_df) + geom_line(aes(x = data.frame(p), y = power))
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
values_of_p <- seq(0.001, 0.999, by=0.01)
power <- pnorm(39.5, 100 * values_of_p, sqrt(100 * values_of_p * (1 - values_of_p))) + (1 - pnorm(60.5, 100 * p, sqrt(100 * values_of_p * (1 - values_of_p))))
power_df <- data.frame(power)
ggplot(power_df) + geom_line(aes(x = values_of_p, y = power))
values_of_p <- seq(0.001, 0.999, by=0.01)
power <- pnorm(39.5, 100 * values_of_p, sqrt(100 * values_of_p * (1 - values_of_p))) + 1 - pnorm(60.5, 100 * p, sqrt(100 * values_of_p * (1 - values_of_p)))
power_df <- data.frame(power)
ggplot(power_df) + geom_line(aes(x = values_of_p, y = power))
pnorm(39.5, 100 * values_of_p, sqrt(100 * values_of_p * (1 - values_of_p)))
1 - pnorm(60.5, 100 * values_of_p, sqrt(100 * values_of_p * (1 - values_of_p)))
1 - pnorm(60.5, 100 * values_of_p, sqrt(100 * values_of_p * (1 - values_of_p))) + pnorm(39.5, 100 * values_of_p, sqrt(100 * values_of_p * (1 - values_of_p)))
plot(values_of_p, 1 - pnorm(60.5, 100 * values_of_p, sqrt(100 * values_of_p * (1 - values_of_p))) + pnorm(39.5, 100 * values_of_p, sqrt(100 * values_of_p * (1 - values_of_p))), type='l')
values_of_p <- seq(0.001, 0.999, by=0.01)
power <- pnorm(39.5, 100 * values_of_p, sqrt(100 * values_of_p * (1 - values_of_p))) + 1 - pnorm(60.5, 100 * values_of_p, sqrt(100 * values_of_p * (1 - values_of_p)))
power_df <- data.frame(power)
ggplot(power_df) + geom_line(aes(x = values_of_p, y = power))
values_of_p <- seq(0.001, 0.999, by=0.01)
power <- pnorm(39.5, 100 * values_of_p, sqrt(100 * values_of_p * (1 - values_of_p))) + 1 - pnorm(60.5, 100 * values_of_p, sqrt(100 * values_of_p * (1 - values_of_p)))
power_df <- data.frame(power)
ggplot(power_df) + geom_line(aes(x = values_of_p, y = power))
values_of_p <- seq(0.001, 0.999, by=0.01)
power <- pnorm(39.5, 100 * values_of_p, sqrt(100 * values_of_p * (1 - values_of_p))) + 1 - pnorm(60.5, 100 * values_of_p, sqrt(100 * values_of_p * (1 - values_of_p)))
power_df <- data.frame(power)
ggplot(power_df) + geom_line(aes(x = values_of_p, y = power)) + xlab('p') + ylab('power')
values_of_p <- seq(0.001, 0.999, by=0.01)
power <- pnorm(39.5, 100 * values_of_p, sqrt(100 * values_of_p * (1 - values_of_p))) + 1 - pnorm(60.5, 100 * values_of_p, sqrt(100 * values_of_p * (1 - values_of_p)))
power_df <- data.frame(power)
ggplot(power_df) + geom_line(aes(x = values_of_p, y = power)) + xlab('p') + ylab('power') + ggtitle('The horizontal line is at the level alpha=3.6%')
values_of_p <- seq(0.001, 0.999, by=0.01)
power <- pnorm(39.5, 100 * values_of_p, sqrt(100 * values_of_p * (1 - values_of_p))) + 1 - pnorm(60.5, 100 * values_of_p, sqrt(100 * values_of_p * (1 - values_of_p)))
power_df <- data.frame(power)
ggplot(power_df) + geom_line(aes(x = values_of_p, y = power)) + xlab('p') + ylab('power') + ggtitle('The horizontal line is at the level alpha=3.6%') + geom_hline(3.58)
values_of_p <- seq(0.001, 0.999, by=0.01)
power <- pnorm(39.5, 100 * values_of_p, sqrt(100 * values_of_p * (1 - values_of_p))) + 1 - pnorm(60.5, 100 * values_of_p, sqrt(100 * values_of_p * (1 - values_of_p)))
power_df <- data.frame(power)
ggplot(power_df) + geom_line(aes(x = values_of_p, y = power)) + xlab('p') + ylab('power') + ggtitle('The horizontal line is at the level alpha=3.6%') + geom_hline(aes(x=3.58))
values_of_p <- seq(0.001, 0.999, by=0.01)
power <- pnorm(39.5, 100 * values_of_p, sqrt(100 * values_of_p * (1 - values_of_p))) + 1 - pnorm(60.5, 100 * values_of_p, sqrt(100 * values_of_p * (1 - values_of_p)))
power_df <- data.frame(power)
ggplot(power_df) + geom_line(aes(x = values_of_p, y = power)) + xlab('p') + ylab('power') + ggtitle('The horizontal line is at the level alpha=3.6%') + geom_hline(aes(y=3.58))
values_of_p <- seq(0.001, 0.999, by=0.01)
power <- pnorm(39.5, 100 * values_of_p, sqrt(100 * values_of_p * (1 - values_of_p))) + 1 - pnorm(60.5, 100 * values_of_p, sqrt(100 * values_of_p * (1 - values_of_p)))
power_df <- data.frame(power)
ggplot(power_df) + geom_line(aes(x = values_of_p, y = power)) + xlab('p') + ylab('power') + ggtitle('The horizontal line is at the level alpha=3.6%') + geom_hline(aes(yintercept=3.58))
values_of_p <- seq(0.001, 0.999, by=0.01)
power <- pnorm(39.5, 100 * values_of_p, sqrt(100 * values_of_p * (1 - values_of_p))) + 1 - pnorm(60.5, 100 * values_of_p, sqrt(100 * values_of_p * (1 - values_of_p)))
power_df <- data.frame(power)
ggplot(power_df) + geom_line(aes(x = values_of_p, y = power)) + xlab('p') + ylab('power') + ggtitle('The horizontal line is at the level alpha=3.6%') + geom_hline(aes(yintercept=0.0358), color='red')
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
x_bar <- 1.65 * 2 + 0
# rejects for x < -3.3 and x > 3.3
p <- seq(-10, 10, by = 0.1)
power <- pnorm(-3.3, 0 * p, sqrt(100 * p * (1-p))) + 1 - pnorm(3.3, 0 * p, sqrt(100 * p * (1 - p)))
power_df2 <- data.frame(power)
ggplot(power_df2) + geom_line(aes(x = p, y = power))
x_bar <- 1.65 * 2 + 0
# rejects for x < -3.3 and x > 3.3
u <- seq(-10, 10, by = 0.1)
power <- pnorm(-3.3, u, 2) + 1 - pnorm(3.3, u, 2)
power_df2 <- data.frame(power)
ggplot(power_df2) + geom_line(aes(x = p, y = power))
x_bar <- 1.65 * 2 + 0
# rejects for x < -3.3 and x > 3.3
u <- seq(-10, 10, by = 0.1)
power <- pnorm(-3.3, u, 2) + 1 - pnorm(3.3, u, 2)
power_df2 <- data.frame(power)
ggplot(power_df2) + geom_line(aes(x = u, y = power))
x_bar <- 1.65 * 2 + 0
# rejects for x < -3.3 and x > 3.3
u <- seq(-10, 10, by = 0.1)
power <- pnorm(-3.3, u, 2) + 1 - pnorm(3.3, u, 2)
power_df2 <- data.frame(power)
ggplot(power_df2) + geom_line(aes(x = u, y = power)) + xlab('mean') + ylab('power') + ggtitle('p = 0.1')
x_bar <- 1.96 * 2 + 0
# rejects for x < -3.92 and x > 3.92
u <- seq(-10, 10, by = 0.1)
power <- pnorm(-x_bar, u, 2) + 1 - pnorm(x_bar, u, 2)
power_df2 <- data.frame(power)
ggplot(power_df2) + geom_line(aes(x = u, y = power)) + xlab('mean') + ylab('power') + ggtitle('p = 0.05')
se <- sqrt(100/100)
x_bar <- 1.65 * se + 0
# rejects for x < -3.3 and x > 3.3
u <- seq(-10, 10, by = 0.1)
power <- pnorm(-x_bar, u, 2) + 1 - pnorm(x_bar, u, 2)
power_df2 <- data.frame(power)
ggplot(power_df2) + geom_line(aes(x = u, y = power)) + xlab('mean') + ylab('power') + ggtitle('p = 0.1')
x_bar <- 1.96 * se + 0
# rejects for x < -3.92 and x > 3.92
u <- seq(-10, 10, by = 0.1)
power <- pnorm(-x_bar, u, 2) + 1 - pnorm(x_bar, u, 2)
power_df2 <- data.frame(power)
ggplot(power_df2) + geom_line(aes(x = u, y = power)) + xlab('mean') + ylab('power') + ggtitle('p = 0.05')
?read.table
read.table
c <- c(1, 2, 3)
c * 5
c[NA]
matrix(1:12, nrow=4)
matrix(1:12, nrow=4, ncol = 4)
mtcars[c(1, 2)]
head(mtcars)
mtcars[c(1, 2), c(3)]
knitr::opts_chunk$set(echo = TRUE)
abalone <- read.table("abalone.data", sep = ",")
column_names <- c('Sex', 'Length', 'Diameter', 'Height', 'Whole', 'Shucked', 'Viscera', 'Shell', 'Rings')
column_types <- c('character', 'real', 'real', 'real', 'real', 'real', 'real', 'real', 'integer')
abalone <- read.table('abalone.data', col.names = column_names, colClasses = column_types, sep = ",")
str(abalone, vec.len = 1)
abalone2 <- read.csv('abalone.data', header = FALSE, sep = ',')
str(abalone2, vec.len = 1)
# First 10 lines
abalone10 <- read.table('abalone.data', col.names = column_names, colClasses = column_types, nrows = 10, sep = ",")
str(abalone10, vec.len = 1)
# Skip first 10 lines
abalone20 <- read.table('abalone.data', col.names = column_names, colClasses = column_types, skip = 10, nrows = 10, sep = ",")
str(abalone20, vec.len = 1)
library(dplyr)
# First 5 rows
five_rows <- abalone[1:5, ]
five_rows
# Last 5 rows
abalone[(nrow(abalone)-4):(nrow(abalone)), ]
# height14
height14 = abalone[abalone$height < 0.14]
dim(height14)
# infant
infant = abalone[abalone$sex == 'I']
infant
# First 5 rows
five_rows <- abalone[1:5]
five_rows
# Last 5 rows
abalone[(nrow(abalone)-4):(nrow(abalone)), ]
# height14
height14 = abalone[abalone$height < 0.14]
dim(height14)
# infant
infant = abalone[abalone$sex == 'I']
infant
# First 5 rows
five_rows <- abalone[1:5, ]
five_rows
# Last 5 rows
abalone[(nrow(abalone)-4):(nrow(abalone)), ]
# height14
height14 = abalone[abalone$height < 0.14]
dim(height14)
# infant
infant = abalone[abalone$sex == 'I']
infant
curry$shot_made_flag == 'y'
library(dplyr)
curry <- read.csv("../data/stephen-curry.csv", header = TRUE, quote = "", sep = ',', stringsAsFactors = FALSE)
setwd("C:/Users/missc/Desktop/workout01/code")
curry <- read.csv("../data/stephen-curry.csv", header = TRUE, quote = "", sep = ',', stringsAsFactors = FALSE)
durant <- read.csv('../data/kevin-durant.csv', header = TRUE, quote = "", sep = ',', stringsAsFactors = FALSE)
green <- read.csv('../data/draymond-green.csv', header = TRUE, quote = "", sep = ',', stringsAsFactors = FALSE)
iguodala <- read.csv('../data/andre-iguodala.csv', header = TRUE, quote = "", sep = ',', stringsAsFactors = FALSE)
thompson <- read.csv('../data/klay-thompson.csv', header = TRUE, quote = "", sep = ',', stringsAsFactors = FALSE)
curry <- mutate(curry, name = 'Stephen Curry')
durant <- mutate(durant, name = 'Kevin Durant')
green <- mutate(green, name = 'Draymond Green')
iguodala <- mutate(iguodala, name = 'Andre Iguodala')
thompson <- mutate(thompson, name = 'Klay Thompson')
curry$shot_made_flag == 'y'
curry[curry$shot_made_flag == 'y']
curry$shot_made_flag[curry$shot_made_flag == 'y']
curry$shot_made_flag[curry$shot_made_flag == 'y'] = 'shot-yes'
curry$shot_made_flag
curry$shot_made_flag[curry$shot_made_flag == 'n'] = 'shot_no'
mutate(curry, minute = curry$period * 12 - curry$minutes_remaining)
head(curry)
curry <- mutate(curry, minute = curry$period * 12 - curry$minutes_remaining)
head(curry)
curry <- read.csv("../data/stephen-curry.csv", header = TRUE, quote = "", sep = ',', stringsAsFactors = FALSE)
curry$shot_made_flag[curry$shot_made_flag == 'y'] = 'shot_yes'
curry$shot_made_flag[curry$shot_made_flag == 'n'] = 'shot_no'
curry <- mutate(curry, minute = curry$period * 12 - curry$minutes_remaining)
durant$shot_made_flag[durant$shot_made_flag == 'y'] = 'shot_yes'
durant$shot_made_flag[durant == 'n'] = 'shot_no'
durant <- mutate(durant, minute = durant$period * 12 - durant$minutes_remaining)
green$shot_made_flag[durant$shot_made_flag == 'y'] = 'shot_yes'
green$shot_made_flag[green$shot_made_flag == 'n'] = 'shot_no'
green <- mutate(green, minute = green$period * 12 - green$minutes_remaining)
iguodala$shot_made_flag[iguodala$shot_made_flag == 'y'] = 'shot_yes'
iguodala$shot_made_flag[iguodala == 'n'] = 'shot_no'
iguodala <- mutate(iguodala, minute = iguodala$period * 12 - iguodala$minutes_remaining)
thompson$shot_made_flag[thompson$shot_made_flag == 'y'] = 'shot_yes'
thompson$shot_made_flag[thompson == 'n'] = 'shot_no'
thompson <- mutate(thompson, minute = thompson$period * 12 - thompson$minutes_remaining)
library(dplyr)
curry <- read.csv("../data/stephen-curry.csv", header = TRUE, quote = "", sep = ',', stringsAsFactors = FALSE)
durant <- read.csv('../data/kevin-durant.csv', header = TRUE, quote = "", sep = ',', stringsAsFactors = FALSE)
green <- read.csv('../data/draymond-green.csv', header = TRUE, quote = "", sep = ',', stringsAsFactors = FALSE)
iguodala <- read.csv('../data/andre-iguodala.csv', header = TRUE, quote = "", sep = ',', stringsAsFactors = FALSE)
thompson <- read.csv('../data/klay-thompson.csv', header = TRUE, quote = "", sep = ',', stringsAsFactors = FALSE)
curry <- mutate(curry, name = 'Stephen Curry')
durant <- mutate(durant, name = 'Kevin Durant')
green <- mutate(green, name = 'Draymond Green')
iguodala <- mutate(iguodala, name = 'Andre Iguodala')
thompson <- mutate(thompson, name = 'Klay Thompson')
curry$shot_made_flag[curry$shot_made_flag == 'y'] = 'shot_yes'
curry$shot_made_flag[curry$shot_made_flag == 'n'] = 'shot_no'
curry <- mutate(curry, minute = curry$period * 12 - curry$minutes_remaining)
durant$shot_made_flag[durant$shot_made_flag == 'y'] = 'shot_yes'
durant$shot_made_flag[durant$shot_made_flag == 'n'] = 'shot_no'
durant <- mutate(durant, minute = durant$period * 12 - durant$minutes_remaining)
green$shot_made_flag[green$shot_made_flag == 'y'] = 'shot_yes'
green$shot_made_flag[green$shot_made_flag == 'n'] = 'shot_no'
green <- mutate(green, minute = green$period * 12 - green$minutes_remaining)
iguodala$shot_made_flag[iguodala$shot_made_flag == 'y'] = 'shot_yes'
iguodala$shot_made_flag[iguodala$shot_made_flag == 'n'] = 'shot_no'
iguodala <- mutate(iguodala, minute = iguodala$period * 12 - iguodala$minutes_remaining)
thompson$shot_made_flag[thompson$shot_made_flag == 'y'] = 'shot_yes'
thompson$shot_made_flag[thompson$shot_made_flag == 'n'] = 'shot_no'
thompson <- mutate(thompson, minute = thompson$period * 12 - thompson$minutes_remaining)
sink('../code/stephen-curry-summary.txt')
summarize(curry)
sink()
summary(curry)
sink()
sink('../code/stephen-curry-summary.txt')
summary(curry)
sink()
sink('../code/kevin-durant-summary.txt')
summary(durant)
sink()
sink('../code/draymond-green-summary.txt')
summary(green)
sink()
sink('../code/andre-iguodala-summary.txt')
summary(iguodala)
sink()
sink('../code/klay-thompson-summary.txt')
summary(thompson)
sink()
rbind(curry, durant, green, iguodala, thompson)
stacked_table <- rbind(curry, durant, green, iguodala, thompson)
head(stacked_table)
tail(stacked_table)
sink('..data/shots-data.csv')
sink('../data/shots-data.csv')
read.csv(stacked_table, header = TRUE, sep = ',')
stacked_table
sink()
sink('../output/shots-data-summary.txt')
sink('../output/shots-data-summary.txt')
summary(stacked_table)
sink()
